name: Link sub-issues (scan all issues)

on:
  workflow_dispatch: {}   # manual trigger, no inputs

permissions:
  contents: read
  issues: write           # required to add sub-issues

concurrency:
  group: link-subissues-scanall
  cancel-in-progress: true

jobs:
  scan_and_link:
    runs-on: ubuntu-latest
    env:
      GH_REPO: ${{ github.repository }}   # OWNER/REPO
      API_VER: 2022-11-28
      STATE: open
      REPLACE: "false"
      DRYRUN: "false"
      PAGE_SIZE: "100"
      LOG_LEVEL: info

    steps:
      - uses: actions/checkout@v4

      - name: Preflight (check bytes and syntax)
        shell: bash
        run: |
          awk 'END{print "script lines:",NR}' SCRIPTS/ba-link-subissues.sh
          head -n 20 SCRIPTS/ba-link-subissues.sh | nl -ba
          bash -n SCRIPTS/ba-link-subissues.sh

      - name: Run scanner (all issues; no inputs)
        env:
          GH_TOKEN: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}   # custom PAT or default token
 #       shell: bash
 #       run: |
 #         set -euo pipefail
#          bash SCRIPTS/ba-link-subissues.sh

#- name: Run scanner (all issues; no inputs)
#  env:
#    GH_TOKEN: ${{ github.token }}   # same token you were already using
    GH_DEBUG: "1"                   # verbose GitHub CLI HTTP debug
  run: |
    # Strict mode stays the same
    set -euo pipefail

    # === requested debug harness (trace + ERR trap) ===
    PS4='+ [${EPOCHREALTIME}] ${BASH_SOURCE##*/}:${LINENO}: ${FUNCNAME[0]:-main}: '
    set -x
    trap 'ec=$?; echo "::error file=${BASH_SOURCE[0]},line=${LINENO}::${BASH_COMMAND} (exit $ec)"; exit $ec' ERR

    # === requested GH CLI visibility ===
    echo "gh version: $(gh --version 2>&1)"
    echo "gh auth status:"
    gh auth status

    echo "rate_limit (raw):"
    gh api rate_limit || true

    # === original script ===
    bash SCRIPTS/ba-link-subissues.sh
