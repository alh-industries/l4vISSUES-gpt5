# .github/workflows/manual-import.yml
name: Manual Import (Zero-Edit)

on:
  workflow_dispatch:
    inputs:
      data_pattern:
        description: Glob for TSV/CSV (latest modified file is used)
        default: TSV_HERE/*.tsv
        required: true
      project_owner:
        description: Project owner (@me for user project, or org name)
        default: "@me"
        required: true
      project_title:
        description: Project title (create or reuse)
        default: Imported Plan
        required: true
      run_labels:
        description: Run labels step
        type: boolean
        default: true
      run_issues:
        description: Run issues step
        type: boolean
        default: true
      run_subissues:
        description: Run sub-issues step
        type: boolean
        default: true
      run_project:
        description: Run project step (create/reuse + add items)
        type: boolean
        default: true
      run_fields:
        description: Run project fields step
        type: boolean
        default: true

permissions:
  contents: read
  issues: write
  repository-projects: write

# Global env & defaults for convenience
env:
  GH_REPO: ${{ github.repository }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}        # zero-edit auth; gh will auto-use this
  PROJECT_OWNER: ${{ inputs.project_owner }}
  PROJECT_TITLE: ${{ inputs.project_title }}

defaults:
  run:
    shell: bash

jobs:
  import:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        

      - name: Tools & auth (no login needed; GH_TOKEN in env)
        run: |
          set -euo pipefail
          gh --version
          jq --version
          gh auth status -h github.com || true



          # LENIENT smoke test: warn if we cannot list projects, but don't fail the job
          if ! gh project list --owner "${PROJECT_OWNER}" --limit 1; then
            echo "âš  Warning: Could not list projects for ${PROJECT_OWNER}. This may indicate insufficient permissions."
          fi
          
          # STRICT alternative (uncomment to fail fast on permissions):
          gh project list --owner "${PROJECT_OWNER}" --limit 1


      - name: Resolve data file from glob
        id: datafile
        run: |
          set -euo pipefail
          pattern='${{ inputs.data_pattern }}'
          shopt -s nullglob
          files=( $pattern )
          if [[ ${#files[@]} -eq 0 ]]; then
            echo "No files match: $pattern" >&2
            exit 1
          fi
          DATA_FILE="$(ls -1t ${pattern} | head -n1)"
          echo "DATA_FILE=$DATA_FILE" | tee -a "$GITHUB_ENV"
          echo "data_file=$DATA_FILE" >> "$GITHUB_OUTPUT"

      - name: Prepare scripts
        run: |
          set -euo pipefail
          chmod +x SCRIPTS/*.sh
          mkdir -p OUTPUTS

      - name: Labels
        if: ${{ inputs.run_labels }}
        run: |
          bash SCRIPTS/aa-labels.sh "${{ steps.datafile.outputs.data_file }}"

      - name: Issues
        if: ${{ inputs.run_issues }}
        run: |
          bash SCRIPTS/ab-issues.sh "${{ steps.datafile.outputs.data_file }}"

      - name: Sub-issues
        if: ${{ inputs.run_subissues }}
        env:
          PARENT_MAP: OUTPUTS/issue_map.tsv
        run: |
          bash SCRIPTS/ac-subissues.sh "${{ steps.datafile.outputs.data_file }}"

      - name: Project (create/reuse + add items)
        if: ${{ inputs.run_project }}
        id: project
        env:
          PARENT_MAP: OUTPUTS/issue_map.tsv
          SUBMAP: OUTPUTS/subissue_map.tsv
        run: |
          set -euo pipefail
          bash SCRIPTS/ad-project.sh
          echo "PROJECT_NUMBER=$(cat OUTPUTS/project_number.txt)" | tee -a "$GITHUB_ENV"
          echo "project_number=$(cat OUTPUTS/project_number.txt)" >> "$GITHUB_OUTPUT"

      - name: Fields
        if: ${{ inputs.run_fields }}
        env:
          PROJECT_NUMBER: ${{ steps.project.outputs.project_number }}
          PARENT_MAP: OUTPUTS/issue_map.tsv
        run: |
          bash SCRIPTS/ae-fields.sh "${{ steps.datafile.outputs.data_file }}"
